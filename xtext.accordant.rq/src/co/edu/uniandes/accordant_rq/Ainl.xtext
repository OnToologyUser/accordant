// automatically generated by Xtext
grammar co.edu.uniandes.accordant_rq.Ainl with org.eclipse.xtext.common.Terminals

import "http://uniandes.accordant.requirement"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

InputPackage returns InputPackage:
	{InputPackage}
	'InputPackage'
	name=EString
	'{'
		'scenarios' '{' scenarios+=QScenario  ("," scenarios+=QScenario)* '}'
		'tactics' '{' gtactics+=Tactic (',' gtactics+=Tactic)* '}'
	'}';


EString returns ecore::EString:
	STRING | ID;

QScenario returns QScenario:
	{QScenario}
	'QScenario'
	'{'
		'QA' ':' qAttribute=QAttribute
		'measure' ':' measure=QAMetric
		'minValue' ':' minValue=EFloat
		'maxValue' ':' maxValue=EFloat
		'unit' ':' unit=MetricUnit
		'stimulus' ':' stimulus=EString
		'environment' ':' environment=EString
		
	'}';

enum QAMetric returns QAMetric:
				THROUGHPUT = 'THROUGHPUT' | LATENCY = 'LATENCY' | DEADLINE = 'DEADLINE';

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

enum MetricUnit returns MetricUnit:
				MILLIS = 'MILLIS' | SECONDS = 'SECONDS' | MINUTES = 'MINUTES' | HOURS = 'HOURS' | TASKS = 'TASKS' | BYTES = 'BYTES' | MSGS = 'MSGS';

enum QAttribute returns QAttribute:
				AVAILABILITY = 'AVAILABILITY' | PERFORMANCE = 'PERFORMANCE' | MODIFIABILITY = 'MODIFIABILITY' | TESTABILITY = 'TESTABILITY' | SCALABILITY = 'SCALABILITY';

AnalyzedQS returns AnalyzedQS:
	'AnalyzedQS'
	'{'
		('reasoning' ':' reasoning=EString)?
		'QS' ':' qs=[QScenario|EString]
		('SPoints' '{' points=SensitivityPoint '}' )?
	'}';

SensitivityPoint returns SensitivityPoint:
	(isRisk?='isRisk')?
	'SensitivityPoint'
	name=EString
	'{'
		('rationale' rationale=EString)?
		('code' code=EString)?
		'tactic' '(' tactic+=[Tactic|EString] ( "," tactic+=[Tactic|EString])* ')' 
	'}';

Tactic returns Tactic:
	{Tactic}
	'Tactic'
	name=EString
	'{'
		('QA' ':' qAttribute=QAttribute)?
		('rationale' ':' rationale=EString)?
		('stimulus' ':' stimulus=EString)?
		('response' ':' response=EString)?
		('viewpoint' ':' viewpoint=EString)?
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';
